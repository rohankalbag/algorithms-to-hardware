$pipelined $depth 14 $operator $module [mulFp] $in (X Y: $float<8,23>) $out (Z: $float<8,23>) $is
{
	Z := (X*Y)
} 

// Generate the pipe declarations.
// with ID 0
#define ID 0
#include decls.aa
// and ID 1
#define ID 1
#include decls.aa

$module [myTop] $in () $out () $is
{
	$parallelblock[par] {
// Generate the branch block with ID 0
#define ID 0
#include base.aa

// Generate the branch block with ID 1
#define ID 1
#include base.aa

	}
}


